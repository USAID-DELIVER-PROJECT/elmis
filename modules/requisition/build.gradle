/*
 * This program is part of the OpenLMIS logistics management information system platform software.
 * Copyright © 2013 VillageReach
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License along with this program.  If not, see http://www.gnu.org/licenses.  For additional information contact info@OpenLMIS.org. 
 */

apply plugin: 'cobertura'

dependencies {
    compile project(':modules:email'),
        project(':modules:core'),
        project(':modules:export'),
        project(':modules:equipment')

    compile 'com.google.guava:guava:16.0.1'
    compile 'org.springframework:spring-context:4.1.5.RELEASE'
    compile 'org.apache.poi:poi:3.13'
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'org.mybatis:mybatis:3.2.8'
    compile 'javax.persistence:persistence-api:1.0.2'
    compile 'joda-time:joda-time:2.7'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.springframework:spring-beans:4.1.5.RELEASE'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'junit:junit-dep:4.8.1'
    testCompile 'org.apache.poi:poi-ooxml:3.13'
    testCompile 'org.powermock:powermock-core:1.6.2'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.2'

    testCompile  project(path : ':modules:core', configuration: 'testFixtures')
    testCompile  project(path : ':modules:equipment', configuration: 'testFixtures')

    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        testFixtures testJar
    }
}

cobertura {
    coverageFormats << 'xml'
    coverageIgnoreTrivial = true
}
