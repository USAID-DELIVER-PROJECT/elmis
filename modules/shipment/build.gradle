/*
 * This program is part of the OpenLMIS logistics management information system platform software.
 * Copyright © 2013 VillageReach
 *
 * This program is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *  
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License along with this program.  If not, see http://www.gnu.org/licenses.  For additional information contact info@OpenLMIS.org. 
 */

apply plugin: 'cobertura'

dependencies {
    compile 'com.google.guava:guava:16.0.1'
    compile 'org.springframework:spring-context:4.1.5.RELEASE'
    compile 'net.sf.supercsv:super-csv:2.0.1'
    compile 'org.ict4h:atomfeed-server:1.9.4'
    compile 'org.mybatis:mybatis:3.2.8'
    compile 'joda-time:joda-time:2.7'
    compile 'org.springframework:spring-jdbc:4.1.4.RELEASE'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'org.springframework:spring-beans:4.1.5.RELEASE'

    testCompile 'junit:junit-dep:4.8.1'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
    testCompile 'org.hamcrest:hamcrest-library:1.2'

    testCompile project(path: ':modules:core', configuration: 'testFixtures')
    testCompile project(path: ':modules:requisition', configuration: 'testFixtures')

    compile 'org.slf4j:slf4j-api:1.7.5',

            'org.apache.camel:camel-core:2.11.1',
            'org.apache.camel:camel-spring:2.11.1',
            'org.apache.camel:camel-ftp:2.11.1',
            'commons-jxpath:commons-jxpath:1.3',
            project(':modules:core'),
            project(':modules:requisition')




    configurations {
        testFixtures {
            extendsFrom testRuntime
        }
    }

    task testJar(type: Jar) {
        from sourceSets.test.output
        classifier = 'test'
    }

    artifacts {
        testFixtures testJar
    }
}

cobertura {
    coverageFormats << 'xml'
    coverageIgnoreTrivial = true
}
