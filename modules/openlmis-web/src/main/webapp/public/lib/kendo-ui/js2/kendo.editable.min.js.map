{"version":3,"sources":["kendo.editable.js"],"names":["f","define","$","undefined","fieldType","field","type","convertToValueBinding","container","find","kendo","attr","each","bindAttr","binding","this","getAttribute","bindingName","fieldName","name","indexOf","length","createAttributes","options","ruleName","rule","model","fields","validation","DATATYPE","BINDING","title","inArray","specialRules","isFunction","isPlainObject","value","message","convertItems","items","idx","item","text","result","addValidationRules","modelField","rules","descriptor","window","ui","Widget","extend","oldIE","support","browser","msie","version","nameSpecialCharRegExp","ERRORTEMPLATE","CHANGE","editors","number","appendTo","kendoNumericTextBox","format","hide","date","_extractFormat","kendoDatePicker","string","boolean","values","stringify","replace","Editable","init","element","that","target","$angular","fn","call","_validateProxy","proxy","_validate","refresh","events","clearContainer","errorTemplate","editor","isObject","isValuesEditor","isCustomEditor","append","e","input","preventChangeTrigger","_validationEventInProgress","bindAttribute","bindingRegex","RegExp","filter","test","is","val","validatable","validateInput","trigger","preventDefault","end","validate","destroy","angular","elements","unbind","removeData","removeAttr","modelFields","focusable","empty","isArray","data","map","dataItem","bind","Validator","validateOnBlur","eq","focus","plugin","jQuery","amd","a1","a2","a3"],"mappings":"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","file":"kendo.editable.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.editable', [\n        'kendo.datepicker',\n        'kendo.numerictextbox',\n        'kendo.validator',\n        'kendo.binder'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'editable',\n        name: 'Editable',\n        category: 'framework',\n        depends: [\n            'datepicker',\n            'numerictextbox',\n            'validator',\n            'binder'\n        ],\n        hidden: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, Widget = ui.Widget, extend = $.extend, oldIE = kendo.support.browser.msie && kendo.support.browser.version < 9, isFunction = kendo.isFunction, isPlainObject = $.isPlainObject, inArray = $.inArray, nameSpecialCharRegExp = /(\"|\\%|'|\\[|\\]|\\$|\\.|\\,|\\:|\\;|\\+|\\*|\\&|\\!|\\#|\\(|\\)|<|>|\\=|\\?|\\@|\\^|\\{|\\}|\\~|\\/|\\||`)/g, ERRORTEMPLATE = '<div class=\"k-widget k-tooltip k-tooltip-validation\" style=\"margin:0.5em\"><span class=\"k-icon k-i-warning\"> </span>' + '#=message#<div class=\"k-callout k-callout-n\"></div></div>', CHANGE = 'change';\n        var specialRules = [\n            'url',\n            'email',\n            'number',\n            'date',\n            'boolean'\n        ];\n        function fieldType(field) {\n            field = field != null ? field : '';\n            return field.type || $.type(field) || 'string';\n        }\n        function convertToValueBinding(container) {\n            container.find(':input:not(:button, [' + kendo.attr('role') + '=upload], [' + kendo.attr('skip') + '], [type=file]), select').each(function () {\n                var bindAttr = kendo.attr('bind'), binding = this.getAttribute(bindAttr) || '', bindingName = this.type === 'checkbox' || this.type === 'radio' ? 'checked:' : 'value:', fieldName = this.name;\n                if (binding.indexOf(bindingName) === -1 && fieldName) {\n                    binding += (binding.length ? ',' : '') + bindingName + fieldName;\n                    $(this).attr(bindAttr, binding);\n                }\n            });\n        }\n        function createAttributes(options) {\n            var field = (options.model.fields || options.model)[options.field], type = fieldType(field), validation = field ? field.validation : {}, ruleName, DATATYPE = kendo.attr('type'), BINDING = kendo.attr('bind'), rule, attr = {\n                    name: options.field,\n                    title: options.title\n                };\n            for (ruleName in validation) {\n                rule = validation[ruleName];\n                if (inArray(ruleName, specialRules) >= 0) {\n                    attr[DATATYPE] = ruleName;\n                } else if (!isFunction(rule)) {\n                    attr[ruleName] = isPlainObject(rule) ? rule.value || ruleName : rule;\n                }\n                attr[kendo.attr(ruleName + '-msg')] = rule.message;\n            }\n            if (inArray(type, specialRules) >= 0) {\n                attr[DATATYPE] = type;\n            }\n            attr[BINDING] = (type === 'boolean' ? 'checked:' : 'value:') + options.field;\n            return attr;\n        }\n        function convertItems(items) {\n            var idx, length, item, value, text, result;\n            if (items && items.length) {\n                result = [];\n                for (idx = 0, length = items.length; idx < length; idx++) {\n                    item = items[idx];\n                    text = item.text || item.value || item;\n                    value = item.value == null ? item.text || item : item.value;\n                    result[idx] = {\n                        text: text,\n                        value: value\n                    };\n                }\n            }\n            return result;\n        }\n        var editors = {\n            'number': function (container, options) {\n                var attr = createAttributes(options);\n                $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoNumericTextBox({ format: options.format });\n                $('<span ' + kendo.attr('for') + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n            },\n            'date': function (container, options) {\n                var attr = createAttributes(options), format = options.format;\n                if (format) {\n                    format = kendo._extractFormat(format);\n                }\n                attr[kendo.attr('format')] = format;\n                $('<input type=\"text\"/>').attr(attr).appendTo(container).kendoDatePicker({ format: options.format });\n                $('<span ' + kendo.attr('for') + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n            },\n            'string': function (container, options) {\n                var attr = createAttributes(options);\n                $('<input type=\"text\" class=\"k-input k-textbox\"/>').attr(attr).appendTo(container);\n            },\n            'boolean': function (container, options) {\n                var attr = createAttributes(options);\n                $('<input type=\"checkbox\" />').attr(attr).appendTo(container);\n            },\n            'values': function (container, options) {\n                var attr = createAttributes(options);\n                var items = kendo.stringify(convertItems(options.values));\n                $('<select ' + kendo.attr('text-field') + '=\"text\"' + kendo.attr('value-field') + '=\"value\"' + kendo.attr('source') + '=\\'' + (items ? items.replace(/\\'/g, '&apos;') : items) + '\\'' + kendo.attr('role') + '=\"dropdownlist\"/>').attr(attr).appendTo(container);\n                $('<span ' + kendo.attr('for') + '=\"' + options.field + '\" class=\"k-invalid-msg\"/>').hide().appendTo(container);\n            }\n        };\n        function addValidationRules(modelField, rules) {\n            var validation = modelField ? modelField.validation || {} : {}, rule, descriptor;\n            for (rule in validation) {\n                descriptor = validation[rule];\n                if (isPlainObject(descriptor) && descriptor.value) {\n                    descriptor = descriptor.value;\n                }\n                if (isFunction(descriptor)) {\n                    rules[rule] = descriptor;\n                }\n            }\n        }\n        var Editable = Widget.extend({\n            init: function (element, options) {\n                var that = this;\n                if (options.target) {\n                    options.$angular = options.target.options.$angular;\n                }\n                Widget.fn.init.call(that, element, options);\n                that._validateProxy = $.proxy(that._validate, that);\n                that.refresh();\n            },\n            events: [CHANGE],\n            options: {\n                name: 'Editable',\n                editors: editors,\n                clearContainer: true,\n                errorTemplate: ERRORTEMPLATE\n            },\n            editor: function (field, modelField) {\n                var that = this, editors = that.options.editors, isObject = isPlainObject(field), fieldName = isObject ? field.field : field, model = that.options.model || {}, isValuesEditor = isObject && field.values, type = isValuesEditor ? 'values' : fieldType(modelField), isCustomEditor = isObject && field.editor, editor = isCustomEditor ? field.editor : editors[type], container = that.element.find('[' + kendo.attr('container-for') + '=' + fieldName.replace(nameSpecialCharRegExp, '\\\\$1') + ']');\n                editor = editor ? editor : editors.string;\n                if (isCustomEditor && typeof field.editor === 'string') {\n                    editor = function (container) {\n                        container.append(field.editor);\n                    };\n                }\n                container = container.length ? container : that.element;\n                editor(container, extend(true, {}, isObject ? field : { field: fieldName }, { model: model }));\n            },\n            _validate: function (e) {\n                var that = this, input, value = e.value, preventChangeTrigger = that._validationEventInProgress, values = {}, bindAttribute = kendo.attr('bind'), fieldName = e.field.replace(nameSpecialCharRegExp, '\\\\$1'), bindingRegex = new RegExp('(value|checked)\\\\s*:\\\\s*' + fieldName + '\\\\s*(,|$)');\n                values[e.field] = e.value;\n                input = $(':input[' + bindAttribute + '*=\"' + fieldName + '\"]', that.element).filter('[' + kendo.attr('validate') + '!=\\'false\\']').filter(function () {\n                    return bindingRegex.test($(this).attr(bindAttribute));\n                });\n                if (input.length > 1) {\n                    input = input.filter(function () {\n                        var element = $(this);\n                        return !element.is(':radio') || element.val() == value;\n                    });\n                }\n                try {\n                    that._validationEventInProgress = true;\n                    if (!that.validatable.validateInput(input) || !preventChangeTrigger && that.trigger(CHANGE, { values: values })) {\n                        e.preventDefault();\n                    }\n                } finally {\n                    that._validationEventInProgress = false;\n                }\n            },\n            end: function () {\n                return this.validatable.validate();\n            },\n            destroy: function () {\n                var that = this;\n                that.angular('cleanup', function () {\n                    return { elements: that.element };\n                });\n                Widget.fn.destroy.call(that);\n                that.options.model.unbind('set', that._validateProxy);\n                kendo.unbind(that.element);\n                if (that.validatable) {\n                    that.validatable.destroy();\n                }\n                kendo.destroy(that.element);\n                that.element.removeData('kendoValidator');\n                if (that.element.is('[' + kendo.attr('role') + '=editable]')) {\n                    that.element.removeAttr(kendo.attr('role'));\n                }\n            },\n            refresh: function () {\n                var that = this, idx, length, fields = that.options.fields || [], container = that.options.clearContainer ? that.element.empty() : that.element, model = that.options.model || {}, rules = {}, field, isObject, fieldName, modelField, modelFields;\n                if (!$.isArray(fields)) {\n                    fields = [fields];\n                }\n                for (idx = 0, length = fields.length; idx < length; idx++) {\n                    field = fields[idx];\n                    isObject = isPlainObject(field);\n                    fieldName = isObject ? field.field : field;\n                    modelField = (model.fields || model)[fieldName];\n                    addValidationRules(modelField, rules);\n                    that.editor(field, modelField);\n                }\n                if (that.options.target) {\n                    that.angular('compile', function () {\n                        return {\n                            elements: container,\n                            data: container.map(function () {\n                                return { dataItem: model };\n                            })\n                        };\n                    });\n                }\n                if (!length) {\n                    modelFields = model.fields || model;\n                    for (fieldName in modelFields) {\n                        addValidationRules(modelFields[fieldName], rules);\n                    }\n                }\n                convertToValueBinding(container);\n                if (that.validatable) {\n                    that.validatable.destroy();\n                }\n                kendo.bind(container, that.options.model);\n                that.options.model.unbind('set', that._validateProxy);\n                that.options.model.bind('set', that._validateProxy);\n                that.validatable = new kendo.ui.Validator(container, {\n                    validateOnBlur: false,\n                    errorTemplate: that.options.errorTemplate || undefined,\n                    rules: rules\n                });\n                var focusable = container.find(':kendoFocusable').eq(0).focus();\n                if (oldIE) {\n                    focusable.focus();\n                }\n            }\n        });\n        ui.plugin(Editable);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}